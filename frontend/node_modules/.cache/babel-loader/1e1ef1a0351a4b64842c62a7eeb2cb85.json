{"ast":null,"code":"import { HelloRequest } from './grpc/helloworld_pb';\nimport { GreeterClient } from './grpc/HelloworldServiceClientPb';\nexport class HelloWorldClient {\n  constructor() {\n    const client = new GreeterClient('http://' + window.location.hostname + ':8080', null, null); // simple unary call\n\n    const request = new HelloRequest();\n    request.setName('World');\n    client.sayHello(request, {}, (err, response) => {\n      if (err) {\n        console.log(`Unexpected error for sayHello: code = ${err.code}` + `, message = \"${err.message}\"`);\n      } else {\n        console.log(response.getMessage());\n      }\n    });\n  }\n\n} // server streaming call\n// var streamRequest = new RepeatHelloRequest();\n// streamRequest.setName('World');\n// streamRequest.setCount(5);\n// var stream = client.sayRepeatHello(streamRequest, {});\n// stream.on('data', (response) => {\n//   console.log(response.getMessage());\n// });\n// stream.on('error', (err) => {\n//   console.log(`Unexpected stream error: code = ${err.code}` +\n//               `, message = \"${err.message}\"`);\n// });","map":{"version":3,"sources":["/Users/stride-admin/Code/blams-seating-arrangement/frontend/src/api/client.ts"],"names":["HelloRequest","GreeterClient","HelloWorldClient","constructor","client","window","location","hostname","request","setName","sayHello","err","response","console","log","code","message","getMessage"],"mappings":"AAAA,SAAQA,YAAR,QACwB,sBADxB;AAEA,SAAQC,aAAR,QAA4B,kCAA5B;AAGA,OAAO,MAAMC,gBAAN,CAAuB;AAC5BC,EAAAA,WAAW,GAAG;AAEZ,UAAMC,MAAM,GAAG,IAAIH,aAAJ,CAAkB,YAAYI,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,OAAzD,EACY,IADZ,EACkB,IADlB,CAAf,CAFY,CAKV;;AACA,UAAMC,OAAO,GAAG,IAAIR,YAAJ,EAAhB;AACAQ,IAAAA,OAAO,CAACC,OAAR,CAAgB,OAAhB;AAEAL,IAAAA,MAAM,CAACM,QAAP,CAAgBF,OAAhB,EAAyB,EAAzB,EAA6B,CAACG,GAAD,EAAMC,QAAN,KAAmB;AAC9C,UAAID,GAAJ,EAAS;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAa,yCAAwCH,GAAG,CAACI,IAAK,EAAlD,GACC,gBAAeJ,GAAG,CAACK,OAAQ,GADxC;AAED,OAHD,MAGO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACK,UAAT,EAAZ;AACD;AACF,KAPD;AASH;;AAnB2B,C,CAuB9B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {HelloRequest,\n       HelloReply} from './grpc/helloworld_pb'\nimport {GreeterClient} from './grpc/HelloworldServiceClientPb'\n\n\nexport class HelloWorldClient {\n  constructor() {\n\n    const client = new GreeterClient('http://' + window.location.hostname + ':8080',\n                               null, null);\n\n      // simple unary call\n      const request = new HelloRequest();\n      request.setName('World');\n\n      client.sayHello(request, {}, (err, response) => {\n        if (err) {\n          console.log(`Unexpected error for sayHello: code = ${err.code}` +\n                      `, message = \"${err.message}\"`);\n        } else {\n          console.log(response.getMessage());\n        }\n      });\n\n  }\n}\n\n\n// server streaming call\n// var streamRequest = new RepeatHelloRequest();\n// streamRequest.setName('World');\n// streamRequest.setCount(5);\n\n// var stream = client.sayRepeatHello(streamRequest, {});\n// stream.on('data', (response) => {\n//   console.log(response.getMessage());\n// });\n// stream.on('error', (err) => {\n//   console.log(`Unexpected stream error: code = ${err.code}` +\n//               `, message = \"${err.message}\"`);\n// });"]},"metadata":{},"sourceType":"module"}