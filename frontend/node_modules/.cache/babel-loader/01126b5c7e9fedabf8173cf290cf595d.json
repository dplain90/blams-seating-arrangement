{"ast":null,"code":"// source: helloworld.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.helloworld.HelloReply', null, global);\ngoog.exportSymbol('proto.helloworld.HelloRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.helloworld.HelloRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.helloworld.HelloRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.helloworld.HelloRequest.displayName = 'proto.helloworld.HelloRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.helloworld.HelloReply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.helloworld.HelloReply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.helloworld.HelloReply.displayName = 'proto.helloworld.HelloReply';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.helloworld.HelloRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.helloworld.HelloRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.helloworld.HelloRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.helloworld.HelloRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.helloworld.HelloRequest}\n */\n\n\nproto.helloworld.HelloRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.helloworld.HelloRequest();\n  return proto.helloworld.HelloRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.helloworld.HelloRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.helloworld.HelloRequest}\n */\n\n\nproto.helloworld.HelloRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.helloworld.HelloRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.helloworld.HelloRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.helloworld.HelloRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.helloworld.HelloRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string name = 1;\n * @return {string}\n */\n\n\nproto.helloworld.HelloRequest.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.helloworld.HelloRequest} returns this\n */\n\n\nproto.helloworld.HelloRequest.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.helloworld.HelloReply.prototype.toObject = function (opt_includeInstance) {\n    return proto.helloworld.HelloReply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.helloworld.HelloReply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.helloworld.HelloReply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.helloworld.HelloReply}\n */\n\n\nproto.helloworld.HelloReply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.helloworld.HelloReply();\n  return proto.helloworld.HelloReply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.helloworld.HelloReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.helloworld.HelloReply}\n */\n\n\nproto.helloworld.HelloReply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.helloworld.HelloReply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.helloworld.HelloReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.helloworld.HelloReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.helloworld.HelloReply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string message = 1;\n * @return {string}\n */\n\n\nproto.helloworld.HelloReply.prototype.getMessage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.helloworld.HelloReply} returns this\n */\n\n\nproto.helloworld.HelloReply.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\ngoog.object.extend(exports, proto.helloworld);","map":{"version":3,"sources":["/Users/stride-admin/Code/blams-seating-arrangement/frontend/src/api/grpc/helloworld_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","helloworld","HelloRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","HelloReply","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","name","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setName","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getName","length","writeString","setProto3StringField","setMessage","getMessage","object","extend","exports"],"mappings":"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","sourcesContent":["// source: helloworld.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.helloworld.HelloReply', null, global);\ngoog.exportSymbol('proto.helloworld.HelloRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.helloworld.HelloRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.helloworld.HelloRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.helloworld.HelloRequest.displayName = 'proto.helloworld.HelloRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.helloworld.HelloReply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.helloworld.HelloReply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.helloworld.HelloReply.displayName = 'proto.helloworld.HelloReply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.helloworld.HelloRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.helloworld.HelloRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.helloworld.HelloRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.helloworld.HelloRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.helloworld.HelloRequest}\n */\nproto.helloworld.HelloRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.helloworld.HelloRequest;\n  return proto.helloworld.HelloRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.helloworld.HelloRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.helloworld.HelloRequest}\n */\nproto.helloworld.HelloRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.helloworld.HelloRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.helloworld.HelloRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.helloworld.HelloRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.helloworld.HelloRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.helloworld.HelloRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.helloworld.HelloRequest} returns this\n */\nproto.helloworld.HelloRequest.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.helloworld.HelloReply.prototype.toObject = function(opt_includeInstance) {\n  return proto.helloworld.HelloReply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.helloworld.HelloReply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.helloworld.HelloReply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.helloworld.HelloReply}\n */\nproto.helloworld.HelloReply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.helloworld.HelloReply;\n  return proto.helloworld.HelloReply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.helloworld.HelloReply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.helloworld.HelloReply}\n */\nproto.helloworld.HelloReply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.helloworld.HelloReply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.helloworld.HelloReply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.helloworld.HelloReply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.helloworld.HelloReply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.helloworld.HelloReply.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.helloworld.HelloReply} returns this\n */\nproto.helloworld.HelloReply.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.helloworld);\n"]},"metadata":{},"sourceType":"module"}